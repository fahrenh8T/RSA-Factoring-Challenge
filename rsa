#!/usr/bin/python3
from math import sqrt, ceil
import sys
import time


def prime_handler(n):
    if n < 2:
        return False
    for i in range(2, int(sqrt(n)) + 1):
        if n % i == 0:
            return False
    return True


def factorize_rsa(n):
    factors = []
    while n % 2 == 0:
        factors.append(2)
        n //= 2
    i = 3
    while i <= sqrt(n):
        if n % i == 0:
            factors.append(i)
            n //= i
        else:
            i += 2
    if n > 2:
        factors.append(n)
    if len(factors) == 1:
        p = factors[0]
        q = n // p
        return (p, q)
    else:
        pq = []
        for factor in factors:
            if prime_handler(factor):
                pq.append(factor)
            else:
                p, q = factorize_rsa(factor)
                pq.append(p)
                pq.append(q)
        return tuple(pq)


input_file = sys.argv[1]
with open(input_file, 'r') as f:
    rsa_numbers = [int(line.strip()) for line in f.readlines()]

for n in rsa_numbers:
    p, q = factorize_rsa(n)
    print(f"{n}={q}*{p}")
